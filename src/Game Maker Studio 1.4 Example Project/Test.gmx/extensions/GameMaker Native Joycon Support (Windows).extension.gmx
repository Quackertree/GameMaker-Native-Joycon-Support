<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<extension>
  <name>GameMaker Native Joycon Support (Windows)</name>
  <version>1.0.0</version>
  <packageID></packageID>
  <ProductID>ACBD3CFF4E539AD869A0E8E3B4B022DD</ProductID>
  <date>28/04/19</date>
  <license>Free to use, also for commercial games.</license>
  <description></description>
  <helpfile></helpfile>
  <installdir></installdir>
  <classname></classname>
  <androidclassname></androidclassname>
  <sourcedir></sourcedir>
  <androidsourcedir></androidsourcedir>
  <macsourcedir></macsourcedir>
  <maclinkerflags></maclinkerflags>
  <maccompilerflags></maccompilerflags>
  <androidinject></androidinject>
  <androidmanifestinject></androidmanifestinject>
  <iosplistinject></iosplistinject>
  <androidactivityinject></androidactivityinject>
  <gradleinject></gradleinject>
  <iosSystemFrameworks/>
  <iosThirdPartyFrameworks/>
  <ConfigOptions>
    <Config name="Default">
      <CopyToMask>1048640</CopyToMask>
    </Config>
  </ConfigOptions>
  <androidPermissions/>
  <IncludedResources>
    <Resource>Included Files\hidapi.dll</Resource>
    <Resource>Included Files\BluetoothDLLGMJoy.dll</Resource>
    <Resource>Scripts\enums_joycon</Resource>
    <Resource>Objects\joyconThreadManagerObj</Resource>
    <Resource>Objects\exampleObj</Resource>
    <Resource>Rooms\exampleRm</Resource>
  </IncludedResources>
  <files>
    <file>
      <filename>BluetoothDLLGMJoy.dll</filename>
      <origname>extensions\BluetoothDLLGMJoy.dll</origname>
      <init></init>
      <final></final>
      <kind>1</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions>
        <function>
          <name>joycon_init</name>
          <externalName>init</externalName>
          <kind>12</kind>
          <help>joycon_init() -- Initializes the joycon data thread</help>
          <returnType>2</returnType>
          <argCount>0</argCount>
          <args/>
        </function>
        <function>
          <name>joycon_exit</name>
          <externalName>stop</externalName>
          <kind>12</kind>
          <help>joycon_exit() -- Terminates the running data thread</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>joycon_connect</name>
          <externalName>connect</externalName>
          <kind>12</kind>
          <help>joycon_connect(device &lt;enum|JoyconDevice.*&gt;) -- Detects the ALREADY PAIRED Joycon and opens ports for reading</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_set_light</name>
          <externalName>setLight</externalName>
          <kind>12</kind>
          <help>joycon_set_light(device &lt;enum|JoyconDevice.*&gt;, bitflag &lt;int&gt;) -- Sets the lights on the Joycon based on a bitflag pattern</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_get_raw</name>
          <externalName>getRawByte</externalName>
          <kind>12</kind>
          <help>joycon_get_raw(device &lt;enum|JoyconDevice.*&gt;, byte &lt;int&gt;) -- Returns a raw byte from the data stream</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_check_button</name>
          <externalName>getButton</externalName>
          <kind>12</kind>
          <help>joycon_check_button(device &lt;enum|JoyconDevice.*&gt;, button &lt;enum|JoyconButton.*&gt;) -- Returns whether the specified button is held down on the Joycon</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_get_analog</name>
          <externalName>getAnalog</externalName>
          <kind>12</kind>
          <help>joycon_get_analog(device &lt;enum|JoyconDevice.*&gt;, axis &lt;enum|JoyconAxis.*&gt;) -- Returns the status of the axis of a Joycon as [-1, 1]</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_get_accl_x</name>
          <externalName>getAccelerationX</externalName>
          <kind>12</kind>
          <help>joycon_get_accl_x(device &lt;enum|JoyconDevice.*&gt;) -- Returns the acceleration in the X-axis for this Joycon</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_get_accl_y</name>
          <externalName>getAccelerationY</externalName>
          <kind>12</kind>
          <help>joycon_get_accl_y(device &lt;enum|JoyconDevice.*&gt;) -- Returns the acceleration in the Y-axis for this Joycon</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_get_accl_z</name>
          <externalName>getAccelerationZ</externalName>
          <kind>12</kind>
          <help>joycon_get_accl_z(device &lt;enum|JoyconDevice.*&gt;) -- Returns the acceleration in the Z-axis for this Joycon</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_get_rot_x</name>
          <externalName>getRotationX</externalName>
          <kind>12</kind>
          <help>joycon_get_rot_x(device &lt;enum|JoyconDevice.*&gt;) -- Returns the angular speed of the Joycon around the X-axis</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_get_rot_y</name>
          <externalName>getRotationY</externalName>
          <kind>12</kind>
          <help>joycon_get_rot_y(device &lt;enum|JoyconDevice.*&gt;) -- Returns the angular speed of the Joycon around the Y-axis</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_check_button_pressed</name>
          <externalName>getButtonPressed</externalName>
          <kind>12</kind>
          <help>joycon_check_button_pressed(device &lt;enum|JoyconDevice.*&gt;, button &lt;enum|JoyconButton.*&gt;) -- Returns whether the specified button was pressed on the Joycon</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_check_button_released</name>
          <externalName>getButtonReleased</externalName>
          <kind>12</kind>
          <help>joycon_check_button_released(device &lt;enum|JoyconDevice.*&gt;, button &lt;enum|JoyconButton.*&gt;) -- Returns whether the specified button was released on the Joycon</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_syncthread</name>
          <externalName>handleButtonInput</externalName>
          <kind>12</kind>
          <help>joycon_syncthread() -- Synchronizes the thread with the GM thread; Should be called once on each step</help>
          <returnType>2</returnType>
          <argCount>-1</argCount>
          <args/>
        </function>
        <function>
          <name>joycon_get_rot_z</name>
          <externalName>getRotationZ</externalName>
          <kind>12</kind>
          <help>joycon_get_rot_z(device &lt;enum|JoyconDevice.*&gt;) -- Returns the angular speed of the Joycon around the Z-axis</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_get_accl_x_raw</name>
          <externalName>getAccelerationXRaw</externalName>
          <kind>12</kind>
          <help>joycon_get_accl_x_raw(device &lt;enum|JoyconDevice.*&gt;) -- Returns the raw acceleration (including gravity) for the X-axis</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_get_accl_y_raw</name>
          <externalName>getAccelerationYRaw</externalName>
          <kind>12</kind>
          <help>joycon_get_accl_y_raw(device &lt;enum|JoyconDevice.*&gt;) -- Returns the raw acceleration (including gravity) for the Y-axis</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_get_accl_z_raw</name>
          <externalName>getAccelerationZRaw</externalName>
          <kind>12</kind>
          <help>joycon_get_accl_z_raw(device &lt;enum|JoyconDevice.*&gt;) -- Returns the raw acceleration (including gravity) for the Z-axis</help>
          <returnType>2</returnType>
          <argCount>1</argCount>
          <args>
            <arg>2</arg>
          </args>
        </function>
        <function>
          <name>joycon_get_analog_raw</name>
          <externalName>getAnalogRaw</externalName>
          <kind>12</kind>
          <help>joycon_get_analog_raw(device &lt;enum|JoyconDevice.*&gt;, axis &lt;enum|JoyconAxis.*&gt;) -- Returns the status of the axis of a Joycon as [-1, 1] without taking dead center into account</help>
          <returnType>2</returnType>
          <argCount>2</argCount>
          <args>
            <arg>2</arg>
            <arg>2</arg>
          </args>
        </function>
      </functions>
      <constants/>
    </file>
    <file>
      <filename>hidapi.dll</filename>
      <origname>extensions\hidapi.dll</origname>
      <init></init>
      <final></final>
      <kind>1</kind>
      <uncompress>0</uncompress>
      <ConfigOptions>
        <Config name="Default">
          <CopyToMask>9223372036854775807</CopyToMask>
        </Config>
      </ConfigOptions>
      <ProxyFiles/>
      <functions/>
      <constants/>
    </file>
  </files>
</extension>
